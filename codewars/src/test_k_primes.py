"""Tests for kata k primes."""

import pytest

TESTS_PF = [
    (5, 500, 600, [500, 520, 552, 567, 588, 592, 594]),
    (5, 592, 600, [592, 594]),
    (2, 2, 20, [4, 6, 9, 10, 14, 15]),
    (20, 100, 200, []),
    (1, 2, 10, [2, 3, 5, 7]),
    (8, 10000000, 10000200, [10000096, 10000152, 10000165, 10000200]),
    (5, 1000, 1100, [1020, 1026, 1032, 1044, 1050, 1053, 1064, 1072, 1092, 1100]),
    (3, 5738752, 5739006,   [5738753, 5738762, 5738764, 5738765, 5738774, 5738779,
                            5738781, 5738785, 5738793, 5738794, 5738809, 5738815,
                            5738821, 5738825, 5738828, 5738830, 5738831, 5738834,
                            5738835, 5738842, 5738843, 5738846, 5738854, 5738862,
                            5738863, 5738870, 5738871, 5738873, 5738878, 5738883,
                            5738887, 5738889, 5738901, 5738905, 5738913, 5738914,
                            5738919, 5738924, 5738926, 5738935, 5738938, 5738941,
                            5738942, 5738943, 5738948, 5738957, 5738959, 5738961,
                            5738966, 5738969, 5738972, 5738974, 5738986, 5738989,
                            5738990, 5738991, 5738995, 5738997, 5739002, 5739005]),
    (5, 4467564, 4467814,   [4467565, 4467566, 4467570, 4467576, 4467580, 4467592,
                            4467596, 4467608, 4467609, 4467612, 4467625, 4467627,
                            4467650, 4467652, 4467658, 4467675, 4467681, 4467694,
                            4467704, 4467716, 4467726, 4467735, 4467738, 4467740,
                            4467768, 4467770, 4467775, 4467788]),
    (3, 1318536, 1318763,   [1318539, 1318542, 1318543, 1318546, 1318551, 1318556,
                            1318565, 1318566, 1318574, 1318578, 1318582, 1318586,
                            1318587, 1318593, 1318594, 1318595, 1318597, 1318601,
                            1318602, 1318603, 1318610, 1318611, 1318617, 1318622,
                            1318628, 1318629, 1318641, 1318643, 1318652, 1318655,
                            1318665, 1318667, 1318669, 1318671, 1318675, 1318678,
                            1318684, 1318689, 1318693, 1318705, 1318708, 1318714,
                            1318715, 1318717, 1318718, 1318722, 1318726, 1318732,
                            1318735, 1318738, 1318743, 1318745, 1318748, 1318751,
                            1318755, 1318757, 1318759, 1318762]),
]

PUZZLE_PRIMES = [
    (138, {1: [2], 3: [8], 7: [128]}),
    (143, {1: [2, 3, 5, 7], 3: [8, 12], 7: [128]}),
    (250, {1: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,
                67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113],
            3: [8, 12, 18, 20, 27, 28, 30, 42, 44, 45, 50, 52, 63, 66, 68, 70,
                75, 76, 78, 92, 98, 99, 102, 105, 110, 114, 116, 117],
            7: [128, 192]}),
]

PUZZLE_SOLUTIONS = [
    (138, 1),
    (143, 2),
    (1, 0),
    (659, 153),
]


def test_k_primes_benchmark(benchmark):
    """Test that the correct k primes within start and end are returned."""
    # from k_primes import count_Kprimes
    from k_primes import is_prime
    result = benchmark(is_prime, 979486728119)
    assert result == True

    # assert result == True
    # assert count_Kprimes(8, 10000000, 10000200) == result

@pytest.mark.parametrize('k, start, end, result', TESTS_PF)
def test_k_primes(k, start, end, result, benchmark):
    """Test that the correct k primes within start and end are returned."""
    from k_primes import count_Kprimes
    benchmark(count_Kprimes, k, start, end)
    assert count_Kprimes(k, start, end) == result

@pytest.mark.parametrize('n, result', PUZZLE_PRIMES)
def test_puzzle_pieces(n, result):
    """Test that the correct primes for puzzle are returned."""
    from k_primes import puzzle_pieces
    assert puzzle_pieces(n) == result

@pytest.mark.parametrize('n, result', PUZZLE_SOLUTIONS)
def test_puzzle(n, result):
    """Test that the correct number of solutions are returned."""
    from k_primes import puzzle
    assert puzzle(n) == result
